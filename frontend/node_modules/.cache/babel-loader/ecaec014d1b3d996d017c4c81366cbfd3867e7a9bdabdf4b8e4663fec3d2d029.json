{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\todo-list-app\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [groupBy, setGroupBy] = useState('none');\n  const [selectedTask, setSelectedTask] = useState(null);\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    openModal(); // Открываем модальное окно при выборе задачи\n  };\n  useEffect(() => {\n    // Функция для загрузки списка задач при монтировании компонента\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/tasks');\n        setTasks(response.data.tasks);\n      } catch (error) {\n        console.error('Ошибка при загрузке задач:', error.message);\n      }\n    };\n    fetchTasks(); // Вызываем функцию загрузки задач\n  }, []);\n\n  // Функция для определения цвета заголовка в зависимости от статуса задачи и даты завершения\n  const getHeaderColor = task => {\n    const today = new Date();\n    const dueDate = new Date(task.due_date);\n    if (task.status === 'completed') {\n      return 'green'; // Зеленый цвет для завершенных задач\n    } else if (dueDate < today) {\n      return 'red'; // Красный цвет для просроченных задач\n    } else {\n      return 'grey'; // Серый цвет для остальных задач\n    }\n  };\n\n  // Функция для сортировки задач по дате завершения\n  const sortByDueDate = (taskA, taskB) => {\n    const dateA = new Date(taskA.due_date);\n    const dateB = new Date(taskB.due_date);\n    return dateA - dateB;\n  };\n\n  // Функция для группировки задач по дате завершения\n  const groupTasksByDueDate = () => {\n    const today = new Date();\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    const todayTasks = tasks.filter(task => new Date(task.due_date) <= today);\n    const nextWeekTasks = tasks.filter(task => new Date(task.due_date) > today && new Date(task.due_date) <= nextWeek);\n    const futureTasks = tasks.filter(task => new Date(task.due_date) > nextWeek);\n    return {\n      today: todayTasks,\n      nextWeek: nextWeekTasks,\n      future: futureTasks\n    };\n  };\n\n  // Функция для группировки задач по ответственным\n  const groupTasksByResponsible = () => {\n    const groupedTasks = {};\n    tasks.forEach(task => {\n      if (!groupedTasks[task.responsible_id]) {\n        groupedTasks[task.responsible_id] = [];\n      }\n      groupedTasks[task.responsible_id].push(task);\n    });\n    return groupedTasks;\n  };\n\n  // Функция для отображения задач в зависимости от выбранной группировки\n  const renderTasks = () => {\n    switch (groupBy) {\n      case 'today':\n      case 'nextWeek':\n      case 'future':\n        const groupedTasks = groupTasksByDueDate();\n        return groupedTasks[groupBy].map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: getHeaderColor(task)\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u041F\\u0440\\u0438\\u043E\\u0440\\u0438\\u0442\\u0435\\u0442: \", task.priority]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F: \", task.due_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439: \", task.responsible_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441: \", task.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this));\n      case 'responsible':\n        const groupedTasksByResponsible = groupTasksByResponsible();\n        return Object.keys(groupedTasksByResponsible).map(responsible_id => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: responsible_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), groupedTasksByResponsible[responsible_id].map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: getHeaderColor(task)\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041F\\u0440\\u0438\\u043E\\u0440\\u0438\\u0442\\u0435\\u0442: \", task.priority]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F: \", task.due_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439: \", task.responsible_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441: \", task.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this))]\n        }, responsible_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this));\n      default:\n        // Без группировки\n        return tasks.sort(sortByDueDate).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: getHeaderColor(task)\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u041F\\u0440\\u0438\\u043E\\u0440\\u0438\\u0442\\u0435\\u0442: \", task.priority]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F: \", task.due_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439: \", task.responsible_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441: \", task.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this));\n    }\n  };\n  const handleEditSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formData = {\n        // Здесь соберите данные для отправки на сервер\n      };\n      const response = await axios.put(`http://localhost:8000/tasks/${selectedTask.id}`, formData);\n      if (response.data.success) {\n        // Обработка успешного редактирования задачи\n      } else {\n        console.error('Ошибка при редактировании задачи:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Ошибка при редактировании задачи:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: groupBy,\n        onChange: e => setGroupBy(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"none\",\n          children: \"\\u0411\\u0435\\u0437 \\u0433\\u0440\\u0443\\u043F\\u043F\\u0438\\u0440\\u043E\\u0432\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"today\",\n          children: \"\\u041D\\u0430 \\u0441\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"nextWeek\",\n          children: \"\\u041D\\u0430 \\u043D\\u0435\\u0434\\u0435\\u043B\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"future\",\n          children: \"\\u041D\\u0430 \\u0431\\u0443\\u0434\\u0443\\u0449\\u0435\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"responsible\",\n          children: \"\\u041F\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), renderTasks(), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      children: selectedTask && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"7Ahnoa/5pWrdH2dAt6vNZPOjCdM=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","groupBy","setGroupBy","selectedTask","setSelectedTask","handleTaskClick","task","openModal","fetchTasks","response","get","data","error","console","message","getHeaderColor","today","Date","dueDate","due_date","status","sortByDueDate","taskA","taskB","dateA","dateB","groupTasksByDueDate","nextWeek","setDate","getDate","todayTasks","filter","nextWeekTasks","futureTasks","future","groupTasksByResponsible","groupedTasks","forEach","responsible_id","push","renderTasks","map","style","color","children","title","fileName","_jsxFileName","lineNumber","columnNumber","priority","id","groupedTasksByResponsible","Object","keys","sort","handleEditSubmit","e","preventDefault","formData","put","success","value","onChange","target","Modal","isOpen","modalIsOpen","onRequestClose","closeModal","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/todo-list-app/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TaskList = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [groupBy, setGroupBy] = useState('none');\r\n    const [selectedTask, setSelectedTask] = useState(null);\r\n\r\n    const handleTaskClick = (task) => {\r\n        setSelectedTask(task);\r\n        openModal(); // Открываем модальное окно при выборе задачи\r\n        };\r\n\r\n    useEffect(() => {\r\n        // Функция для загрузки списка задач при монтировании компонента\r\n        const fetchTasks = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8000/tasks');\r\n                setTasks(response.data.tasks);\r\n            } catch (error) {\r\n                console.error('Ошибка при загрузке задач:', error.message);\r\n            }\r\n        };\r\n        fetchTasks(); // Вызываем функцию загрузки задач\r\n    }, []);\r\n\r\n    // Функция для определения цвета заголовка в зависимости от статуса задачи и даты завершения\r\n    const getHeaderColor = (task) => {\r\n        const today = new Date();\r\n        const dueDate = new Date(task.due_date);\r\n        if (task.status === 'completed') {\r\n            return 'green'; // Зеленый цвет для завершенных задач\r\n        } else if (dueDate < today) {\r\n            return 'red'; // Красный цвет для просроченных задач\r\n        } else {\r\n            return 'grey'; // Серый цвет для остальных задач\r\n        }\r\n    };\r\n\r\n    // Функция для сортировки задач по дате завершения\r\n    const sortByDueDate = (taskA, taskB) => {\r\n        const dateA = new Date(taskA.due_date);\r\n        const dateB = new Date(taskB.due_date);\r\n        return dateA - dateB;\r\n    };\r\n\r\n    // Функция для группировки задач по дате завершения\r\n    const groupTasksByDueDate = () => {\r\n        const today = new Date();\r\n        const nextWeek = new Date();\r\n        nextWeek.setDate(nextWeek.getDate() + 7);\r\n        const todayTasks = tasks.filter((task) => new Date(task.due_date) <= today);\r\n        const nextWeekTasks = tasks.filter((task) => new Date(task.due_date) > today && new Date(task.due_date) <= nextWeek);\r\n        const futureTasks = tasks.filter((task) => new Date(task.due_date) > nextWeek);\r\n        return { today: todayTasks, nextWeek: nextWeekTasks, future: futureTasks };\r\n    };\r\n\r\n     // Функция для группировки задач по ответственным\r\n     const groupTasksByResponsible = () => {\r\n        const groupedTasks = {};\r\n        tasks.forEach((task) => {\r\n            if (!groupedTasks[task.responsible_id]) {\r\n                groupedTasks[task.responsible_id] = [];\r\n            }\r\n            groupedTasks[task.responsible_id].push(task);\r\n        });\r\n        return groupedTasks;\r\n    };\r\n\r\n    \r\n    // Функция для отображения задач в зависимости от выбранной группировки\r\n    const renderTasks = () => {\r\n        switch (groupBy) {\r\n            case 'today':\r\n            case 'nextWeek':\r\n            case 'future':\r\n                const groupedTasks = groupTasksByDueDate();\r\n                return groupedTasks[groupBy].map((task) => (\r\n                    <div key={task.id} style={{ color: getHeaderColor(task) }}>\r\n                        <h3>{task.title}</h3>\r\n                        <p>Приоритет: {task.priority}</p>\r\n                        <p>Дата окончания: {task.due_date}</p>\r\n                        <p>Ответственный: {task.responsible_id}</p>\r\n                        <p>Статус: {task.status}</p>\r\n                    </div>\r\n                ));\r\n            case 'responsible':\r\n                const groupedTasksByResponsible = groupTasksByResponsible();\r\n                return Object.keys(groupedTasksByResponsible).map((responsible_id) => (\r\n                    <div key={responsible_id}>\r\n                        <h3>{responsible_id}</h3>\r\n                        {groupedTasksByResponsible[responsible_id].map((task) => (\r\n                            <div key={task.id} style={{ color: getHeaderColor(task) }}>\r\n                                <h3>{task.title}</h3>\r\n                                <p>Приоритет: {task.priority}</p>\r\n                                <p>Дата окончания: {task.due_date}</p>\r\n                                <p>Ответственный: {task.responsible_id}</p>\r\n                                <p>Статус: {task.status}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ));\r\n            default:\r\n                // Без группировки\r\n                return tasks.sort(sortByDueDate).map((task) => (\r\n                    <div key={task.id} style={{ color: getHeaderColor(task) }}>\r\n                        <h3>{task.title}</h3>\r\n                        <p>Приоритет: {task.priority}</p>\r\n                        <p>Дата окончания: {task.due_date}</p>\r\n                        <p>Ответственный: {task.responsible_id}</p>\r\n                        <p>Статус: {task.status}</p>\r\n                    </div>\r\n                ));\r\n        }\r\n    };\r\n\r\n    const handleEditSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const formData = {\r\n                // Здесь соберите данные для отправки на сервер\r\n            };\r\n            const response = await axios.put(`http://localhost:8000/tasks/${selectedTask.id}`, formData);\r\n            if (response.data.success) {\r\n                // Обработка успешного редактирования задачи\r\n            } else {\r\n                console.error('Ошибка при редактировании задачи:', response.data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при редактировании задачи:', error);\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h2>Список задач</h2>\r\n            <div>\r\n                <label>Группировка:</label>\r\n                <select value={groupBy} onChange={(e) => setGroupBy(e.target.value)}>\r\n                    <option value=\"none\">Без группировки</option>\r\n                    <option value=\"today\">На сегодня</option>\r\n                    <option value=\"nextWeek\">На неделю</option>\r\n                    <option value=\"future\">На будущее</option>\r\n                    <option value=\"responsible\">По ответственным</option>\r\n                </select>\r\n            </div>\r\n            {renderTasks()}\r\n             {/* Модальное окно для редактирования выбранной задачи */}\r\n            <Modal isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n                {selectedTask && (\r\n                    <div>\r\n                        <h2>Редактирование задачи</h2>\r\n                        <form onSubmit={handleEditSubmit}>\r\n                            {/* Форма для редактирования задачи */}\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}