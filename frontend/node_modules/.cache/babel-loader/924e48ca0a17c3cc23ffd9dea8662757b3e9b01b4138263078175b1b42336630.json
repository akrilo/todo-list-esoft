{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\todo-list-app\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const location = useLocation();\n  const currentUser = location.state.currentUser;\n  const [tasks, setTasks] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [groupBy, setGroupBy] = useState('none');\n  const [selectedTask, setSelectedTask] = useState(null);\n  useEffect(() => {\n    // Функция для загрузки списка задач при монтировании компонента\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/tasks');\n        setTasks(response.data.tasks);\n      } catch (error) {\n        console.error('Ошибка при загрузке задач:', error.message);\n      }\n    };\n    fetchTasks(); // Вызываем функцию загрузки задач\n  }, []);\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    openModal();\n  };\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n  const handleEditSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formData = {\n        title: selectedTask.title,\n        description: selectedTask.description,\n        due_date: selectedTask.due_date,\n        priority: selectedTask.priority,\n        status: selectedTask.status,\n        responsible_id: selectedTask.responsible_id\n      };\n      if (selectedTask.creator_id === currentUser.id) {\n        const response = await axios.put(`http://localhost:8000/tasks?id=${selectedTask.id}`, formData);\n        if (response.data.success) {\n          closeModal();\n          alert('Задача успешно отредактирована');\n        } else {\n          console.error('Ошибка при редактировании задачи:', response.data.message);\n        }\n      } else {\n        const statusFormData = {\n          status: formData.status\n        };\n        const response = await axios.put(`http://localhost:8000/tasks?id=${selectedTask.id}`, statusFormData);\n        if (response.data.success) {\n          closeModal();\n          alert('Статус задачи успешно отредактирован');\n        } else {\n          console.error('Ошибка при редактировании статуса задачи:', response.data.message);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка при редактировании задачи:', error);\n    }\n  };\n\n  // Функция для определения цвета заголовка в зависимости от статуса задачи и даты завершения\n  const getHeaderColor = task => {\n    const today = new Date();\n    const dueDate = new Date(task.due_date);\n    if (task.status === 'completed') {\n      return 'green'; // Зеленый цвет для завершенных задач\n    } else if (dueDate < today) {\n      return 'red'; // Красный цвет для просроченных задач\n    } else {\n      return 'grey'; // Серый цвет для остальных задач\n    }\n  };\n\n  // Функция для сортировки задач по дате завершения\n  const sortByDueDate = (taskA, taskB) => {\n    const dateA = new Date(taskA.due_date);\n    const dateB = new Date(taskB.due_date);\n    return dateA - dateB;\n  };\n\n  // Функция для группировки задач по дате завершения\n  const groupTasksByDueDate = () => {\n    const today = new Date();\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    const userTasks = tasks.filter(task => task.responsible_id === currentUser.id);\n    const todayTasks = userTasks.filter(task => new Date(task.due_date) <= today);\n    const nextWeekTasks = userTasks.filter(task => new Date(task.due_date) > today && new Date(task.due_date) <= nextWeek);\n    const futureTasks = userTasks.filter(task => new Date(task.due_date) > nextWeek);\n    return {\n      today: todayTasks,\n      nextWeek: nextWeekTasks,\n      future: futureTasks\n    };\n  };\n\n  // Функция для группировки задач по ответственным\n  const groupTasksByResponsible = () => {\n    const groupedTasks = {};\n    if (currentUser.is_leader === true) {\n      tasks.forEach(task => {\n        if (!groupedTasks[task.responsible_id]) {\n          groupedTasks[task.responsible_id] = [];\n        }\n        groupedTasks[task.responsible_id].push(task);\n      });\n    }\n    return groupedTasks;\n  };\n\n  // Функция для отображения задач в зависимости от выбранной группировки\n  const renderTasks = () => {\n    switch (groupBy) {\n      case 'today':\n      case 'nextWeek':\n      case 'future':\n        const groupedTasks = groupTasksByDueDate();\n        return groupedTasks[groupBy].map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: getHeaderColor(task)\n          },\n          onClick: () => handleTaskClick(task),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u041F\\u0440\\u0438\\u043E\\u0440\\u0438\\u0442\\u0435\\u0442: \", task.priority]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F: \", task.due_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439: \", task.responsible_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441: \", task.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this));\n      case 'responsible':\n        const groupedTasksByResponsible = groupTasksByResponsible();\n        return Object.keys(groupedTasksByResponsible).map(responsible_id => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: responsible_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), groupedTasksByResponsible[responsible_id].map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: getHeaderColor(task)\n            },\n            onClick: () => handleTaskClick(task),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041F\\u0440\\u0438\\u043E\\u0440\\u0438\\u0442\\u0435\\u0442: \", task.priority]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F: \", task.due_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439: \", task.responsible_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441: \", task.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this))]\n        }, responsible_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this));\n      default:\n        if (tasks) {\n          return tasks.sort(sortByDueDate).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: getHeaderColor(task)\n            },\n            onClick: () => handleTaskClick(task),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041F\\u0440\\u0438\\u043E\\u0440\\u0438\\u0442\\u0435\\u0442: \", task.priority]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F: \", task.due_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439: \", task.responsible_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441: \", task.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this));\n        } else {\n          return null;\n        }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: groupBy,\n        onChange: e => setGroupBy(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"none\",\n          children: \"\\u0411\\u0435\\u0437 \\u0433\\u0440\\u0443\\u043F\\u043F\\u0438\\u0440\\u043E\\u0432\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"today\",\n          children: \"\\u041D\\u0430 \\u0441\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"nextWeek\",\n          children: \"\\u041D\\u0430 \\u043D\\u0435\\u0434\\u0435\\u043B\\u044E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"future\",\n          children: \"\\u041D\\u0430 \\u0431\\u0443\\u0434\\u0443\\u0449\\u0435\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"responsible\",\n          children: \"\\u041F\\u043E \\u043E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), renderTasks(), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEditSubmit,\n        children: selectedTask && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: selectedTask.title,\n              onChange: e => setSelectedTask({\n                ...selectedTask,\n                title: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: selectedTask.description,\n              onChange: e => setSelectedTask({\n                ...selectedTask,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: selectedTask.due_date,\n              onChange: e => setSelectedTask({\n                ...selectedTask,\n                due_date: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u041F\\u0440\\u0438\\u043E\\u0440\\u0438\\u0442\\u0435\\u0442:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedTask.priority,\n              onChange: e => setSelectedTask({\n                ...selectedTask,\n                priority: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\\u0432\\u044B\\u0441\\u043E\\u043A\\u0438\\u0439\",\n                children: \"\\u0412\\u044B\\u0441\\u043E\\u043A\\u0438\\u0439\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\\u0441\\u0440\\u0435\\u0434\\u043D\\u0438\\u0439\",\n                children: \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0438\\u0439\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\\u043D\\u0438\\u0437\\u043A\\u0438\\u0439\",\n                children: \"\\u041D\\u0438\\u0437\\u043A\\u0438\\u0439\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedTask.status,\n              onChange: e => setSelectedTask({\n                ...selectedTask,\n                status: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\\u043A \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044E\",\n                children: \"\\u0412 \\u043F\\u0440\\u043E\\u0446\\u0435\\u0441\\u0441\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u044F\\u0435\\u0442\\u0441\\u044F\",\n                children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u043E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: selectedTask.responsible_id,\n              onChange: e => setSelectedTask({\n                ...selectedTask,\n                responsible_id: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"Euw6KdmRer85LVFfDi5bau4mSPI=\", false, function () {\n  return [useLocation];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","location","currentUser","state","tasks","setTasks","modalIsOpen","setModalIsOpen","groupBy","setGroupBy","selectedTask","setSelectedTask","fetchTasks","response","get","data","error","console","message","handleTaskClick","task","openModal","closeModal","handleEditSubmit","e","preventDefault","formData","title","description","due_date","priority","status","responsible_id","creator_id","id","put","success","alert","statusFormData","getHeaderColor","today","Date","dueDate","sortByDueDate","taskA","taskB","dateA","dateB","groupTasksByDueDate","nextWeek","setDate","getDate","userTasks","filter","todayTasks","nextWeekTasks","futureTasks","future","groupTasksByResponsible","groupedTasks","is_leader","forEach","push","renderTasks","map","style","color","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","groupedTasksByResponsible","Object","keys","sort","value","onChange","target","isOpen","onRequestClose","onSubmit","type","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/todo-list-app/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from 'react-modal';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\nconst TaskList = () => {    \r\n    const location = useLocation();\r\n    const currentUser = location.state.currentUser;\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [groupBy, setGroupBy] = useState('none');\r\n    const [selectedTask, setSelectedTask] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Функция для загрузки списка задач при монтировании компонента\r\n        const fetchTasks = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8000/tasks');\r\n                setTasks(response.data.tasks);\r\n            } catch (error) {\r\n                console.error('Ошибка при загрузке задач:', error.message);\r\n            }\r\n        };\r\n        fetchTasks(); // Вызываем функцию загрузки задач\r\n    }, []);\r\n\r\n    const handleTaskClick = (task) => {\r\n        setSelectedTask(task);\r\n        openModal();\r\n    };\r\n\r\n    const openModal = () => {\r\n        setModalIsOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setModalIsOpen(false);\r\n    };\r\n\r\n    const handleEditSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const formData = {\r\n                title: selectedTask.title,\r\n                description: selectedTask.description,\r\n                due_date: selectedTask.due_date,\r\n                priority: selectedTask.priority,\r\n                status: selectedTask.status,\r\n                responsible_id: selectedTask.responsible_id,\r\n            };\r\n\r\n            if (selectedTask.creator_id === currentUser.id) {\r\n                const response = await axios.put(`http://localhost:8000/tasks?id=${selectedTask.id}`, formData);\r\n                if (response.data.success) {\r\n                    closeModal();\r\n                    alert('Задача успешно отредактирована');\r\n                } else {\r\n                    console.error('Ошибка при редактировании задачи:', response.data.message);\r\n                }\r\n            } else {\r\n                const statusFormData = {\r\n                    status: formData.status \r\n                };\r\n                const response = await axios.put(`http://localhost:8000/tasks?id=${selectedTask.id}`, statusFormData);\r\n                if (response.data.success) {\r\n                    closeModal();\r\n                    alert('Статус задачи успешно отредактирован');\r\n                } else {\r\n                    console.error('Ошибка при редактировании статуса задачи:', response.data.message);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при редактировании задачи:', error);\r\n        }\r\n    };\r\n\r\n    // Функция для определения цвета заголовка в зависимости от статуса задачи и даты завершения\r\n    const getHeaderColor = (task) => {\r\n        const today = new Date();\r\n        const dueDate = new Date(task.due_date);\r\n        if (task.status === 'completed') {\r\n            return 'green'; // Зеленый цвет для завершенных задач\r\n        } else if (dueDate < today) {\r\n            return 'red'; // Красный цвет для просроченных задач\r\n        } else {\r\n            return 'grey'; // Серый цвет для остальных задач\r\n        }\r\n    };\r\n\r\n    // Функция для сортировки задач по дате завершения\r\n    const sortByDueDate = (taskA, taskB) => {\r\n        const dateA = new Date(taskA.due_date);\r\n        const dateB = new Date(taskB.due_date);\r\n        return dateA - dateB;\r\n    };\r\n\r\n    // Функция для группировки задач по дате завершения\r\n    const groupTasksByDueDate = () => {\r\n        const today = new Date();\r\n        const nextWeek = new Date();\r\n        nextWeek.setDate(nextWeek.getDate() + 7);\r\n\r\n        const userTasks = tasks.filter(task => task.responsible_id === currentUser.id);\r\n\r\n        const todayTasks = userTasks.filter((task) => new Date(task.due_date) <= today);\r\n        const nextWeekTasks = userTasks.filter((task) => new Date(task.due_date) > today && new Date(task.due_date) <= nextWeek);\r\n        const futureTasks = userTasks.filter((task) => new Date(task.due_date) > nextWeek);\r\n        return { today: todayTasks, nextWeek: nextWeekTasks, future: futureTasks };\r\n    };\r\n\r\n     // Функция для группировки задач по ответственным\r\n    const groupTasksByResponsible = () => {\r\n        const groupedTasks = {};\r\n        if(currentUser.is_leader === true){\r\n            tasks.forEach((task) => {\r\n                if (!groupedTasks[task.responsible_id]) {\r\n                    groupedTasks[task.responsible_id] = [];\r\n                }\r\n                groupedTasks[task.responsible_id].push(task);\r\n            });\r\n        }\r\n        return groupedTasks;\r\n    };\r\n\r\n    \r\n    // Функция для отображения задач в зависимости от выбранной группировки\r\n    const renderTasks = () => {\r\n        switch (groupBy) {\r\n            case 'today':\r\n            case 'nextWeek':\r\n            case 'future':\r\n                const groupedTasks = groupTasksByDueDate();\r\n                return groupedTasks[groupBy].map((task) => (\r\n                    <div key={task.id} style={{ color: getHeaderColor(task) }} onClick={() => handleTaskClick(task)}>\r\n                        <h3>{task.title}</h3>\r\n                        <p>Приоритет: {task.priority}</p>\r\n                        <p>Дата окончания: {task.due_date}</p>\r\n                        <p>Ответственный: {task.responsible_id}</p>\r\n                        <p>Статус: {task.status}</p>\r\n                    </div>\r\n                ));\r\n            case 'responsible':\r\n                const groupedTasksByResponsible = groupTasksByResponsible();\r\n                return Object.keys(groupedTasksByResponsible).map((responsible_id) => (\r\n                    <div key={responsible_id}>\r\n                        <h3>{responsible_id}</h3>\r\n                        {groupedTasksByResponsible[responsible_id].map((task) => (\r\n                            <div key={task.id} style={{ color: getHeaderColor(task) }} onClick={() => handleTaskClick(task)}>\r\n                                <h3>{task.title}</h3>\r\n                                <p>Приоритет: {task.priority}</p>\r\n                                <p>Дата окончания: {task.due_date}</p>\r\n                                <p>Ответственный: {task.responsible_id}</p>\r\n                                <p>Статус: {task.status}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ));\r\n            default:\r\n                if (tasks) {\r\n                    return tasks.sort(sortByDueDate).map((task) => (\r\n                        <div key={task.id} style={{ color: getHeaderColor(task) }} onClick={() => handleTaskClick(task)}>\r\n                            <h3>{task.title}</h3>\r\n                            <p>Приоритет: {task.priority}</p>\r\n                            <p>Дата окончания: {task.due_date}</p>\r\n                            <p>Ответственный: {task.responsible_id}</p>\r\n                            <p>Статус: {task.status}</p>\r\n                        </div>\r\n                    ));\r\n                } else {\r\n                    return null;\r\n                }\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h2>Список задач</h2>\r\n            <div>\r\n                <label>Группировка:</label>\r\n                <select value={groupBy} onChange={(e) => setGroupBy(e.target.value)}>\r\n                    <option value=\"none\">Без группировки</option>\r\n                    <option value=\"today\">На сегодня</option>\r\n                    <option value=\"nextWeek\">На неделю</option>\r\n                    <option value=\"future\">На будущее</option>\r\n                    <option value=\"responsible\">По ответственным</option>\r\n                </select>\r\n            </div>\r\n            {renderTasks()}\r\n            {/* Модальное окно для редактирования выбранной задачи */}\r\n            <Modal isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n                <h2>Редактирование задачи</h2>\r\n                <form onSubmit={handleEditSubmit}>\r\n                    {selectedTask && (\r\n                        <>\r\n                            {/* Форма для редактирования задачи */}\r\n                            <div>\r\n                                <label>Заголовок:</label>\r\n                                <input type=\"text\" value={selectedTask.title} onChange={(e) => setSelectedTask({ ...selectedTask, title: e.target.value })} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Описание:</label>\r\n                                <textarea value={selectedTask.description} onChange={(e) => setSelectedTask({ ...selectedTask, description: e.target.value })}></textarea>\r\n                            </div>\r\n                            <div>\r\n                                <label>Дата окончания:</label>\r\n                                <input type=\"date\" value={selectedTask.due_date} onChange={(e) => setSelectedTask({ ...selectedTask, due_date: e.target.value })} />\r\n                            </div>\r\n                            <div>\r\n                                <label>Приоритет:</label>\r\n                                <select value={selectedTask.priority} onChange={(e) => setSelectedTask({ ...selectedTask, priority: e.target.value })}>\r\n                                    <option value=\"высокий\">Высокий</option>\r\n                                    <option value=\"средний\">Средний</option>\r\n                                    <option value=\"низкий\">Низкий</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <label>Статус:</label>\r\n                                <select value={selectedTask.status} onChange={(e) => setSelectedTask({ ...selectedTask, status: e.target.value })}>\r\n                                    <option value=\"к выполнению\">В процессе</option>\r\n                                    <option value=\"выполняется\">Завершено</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <label>Ответственный:</label>\r\n                                <input type=\"text\" value={selectedTask.responsible_id} onChange={(e) => setSelectedTask({ ...selectedTask, responsible_id: e.target.value })} />\r\n                            </div>\r\n                            {/* Кнопки для сохранения и отмены */}\r\n                            <button type=\"submit\">Сохранить</button>\r\n                            <button onClick={closeModal}>Отмена</button>\r\n                        </>\r\n                    )}\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}